name: Unit test

on: [push, pull_request]

jobs:
  julia_version:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        julia: [0.7.0, 1.0.5, 1.1.1, 1.2.0, 1.3.1, latest]
        python: [3.6, 3.8]

    steps:
    - name: add symlink dir to PATH
      run: echo "::add-path::$HOME/.local/bin"
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test jill
      run: |
        make test
      env:
        JULIA_VERSION: ${{ matrix.julia }}

  non_julia_version:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage
      - name: Test jill download
        run: |
          coverage run -m jill download
          coverage run -m jill download 1
          coverage run -m jill download 1.0

      - name: Test jill install
        run: |
          coverage run -m jill install --confirm
          coverage run -m jill install 1 --confirm
          coverage run -m jill install 1.0 --confirm

      - name: Test jill mirror
        run: |
          coverage run -m jill mirror --config test_mirror.json
          find julia_pkg -name "julia-*"
          [[ `find julia_pkg -name "julia-*" | wc -l` == 2 ]]
    #   - name: Test jill update
    #     run: |
    #       python -m jill update
      - name: generate covrage report
        run: |
          coverage report
          coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          yml: ./codecov.yml
          fail_ci_if_error: true
